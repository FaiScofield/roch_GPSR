#!/usr/bin/env python

PACKAGE = "roch_gpsr"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("voxel_leafsize", double_t, 0, "PCL VoxelGrid filter", 0.01, 0.001, 0.2)
gen.add("pass_th_x", bool_t, 0, "PCL PassThrough filter x", True)
gen.add("pass_th_y", bool_t, 0, "PCL PassThrough filter y", True)
gen.add("pass_th_z", bool_t, 0, "PCL PassThrough filter z", True)
gen.add("pass_th_x_min", double_t, 1, "PCL PassThrough filter x min", -0.3, -2.0, 2.0)
gen.add("pass_th_x_max", double_t, 1, "PCL PassThrough filter x max", 0.3, -2.0, 2.0)
gen.add("pass_th_y_min", double_t, 1, "PCL PassThrough filter y min", -0.3, -1.5, 1.5)
gen.add("pass_th_y_max", double_t, 1, "PCL PassThrough filter y max", 0.3, -1.5, 1.5)
gen.add("pass_th_z_min", double_t, 1, "PCL PassThrough filter z min", 0.1, 0.0, 8.0)
gen.add("pass_th_z_max", double_t, 1, "PCL PassThrough filter z max", 2.0, 0.0, 8.0)
gen.add("plane_seg_optimize", bool_t, 0, "PCL PlaneSegmentation OptimizeCoefficients", True)
gen.add("plane_seg_threshold", double_t, 0, "PCL PlaneSegmentation DistanceThreshold", 0.01, 0.001, 1.0)
gen.add("obj_extrac_tolerance", double_t, 0, "PCL EuclideanClusterExtraction ClusterTolerance", 0.02, 0.001, 0.5)
gen.add("obj_extrac_size_min", double_t, 0, "PCL EuclideanClusterExtraction MinClusterSize", 100, 10, 5000)
gen.add("obj_extrac_size_max", double_t, 0, "PCL EuclideanClusterExtraction MaxClusterSize", 1000, 20, 10000)


exit(gen.generate(PACKAGE, "roch_gpsr", "ObjDetect"))
